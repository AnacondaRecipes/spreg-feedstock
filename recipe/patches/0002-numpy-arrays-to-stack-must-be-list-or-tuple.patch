From a8bc32936c47b7ec6871ac22967ff5ffa1b808c8 Mon Sep 17 00:00:00 2001
From: Lorenzo Pirritano <lpirritano@anaconda.com>
Date: Mon, 10 Feb 2025 16:05:37 +0100
Subject: [PATCH 2/3] numpy arrays to stack must be list or tuple

Fix for newer versions of numpy.

---
 spreg/diagnostics_sur.py |  2 +-
 spreg/sur_utils.py       | 10 +++++-----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/spreg/diagnostics_sur.py b/spreg/diagnostics_sur.py
index b1a7877..0a00813 100644
--- a/spreg/diagnostics_sur.py
+++ b/spreg/diagnostics_sur.py
@@ -219,7 +219,7 @@ def surLMlag(n_eq,WS,bigy,bigX,bigE,bigYP,sig,varb):
 
     """
     # Score
-    Y = np.hstack((bigy[r]) for r in range(n_eq))
+    Y = np.hstack([(bigy[r]) for r in range(n_eq)])
     WY = WS * Y
     EWY = np.dot(bigE.T,WY)
     sigi = la.inv(sig)
diff --git a/spreg/sur_utils.py b/spreg/sur_utils.py
index 5493bc5..aebf9b2 100644
--- a/spreg/sur_utils.py
+++ b/spreg/sur_utils.py
@@ -279,7 +279,7 @@ def sur_dict2mat(dicts):
     
     """
     n_dicts = len(dicts.keys())
-    mat = np.vstack((dicts[t] for t in range(n_dicts)))
+    mat = np.vstack([dicts[t] for t in range(n_dicts)])
     return(mat)
     
 def sur_corr(sig):
@@ -379,8 +379,8 @@ def sur_est(bigXX,bigXy,bigE,bigK):
         for t in range(n_eq):
             sxy = sxy + sigi[r,t]*bigXy[(r,t)]
         sigiXy[r] = sxy
-    xsigy = np.vstack((sigiXy[t] for t in range(n_eq)))
-    xsigx = np.vstack(((np.hstack(sigiXX[(r,t)] for t in range(n_eq))) for r in range(n_eq)))
+    xsigy = np.vstack([sigiXy[t] for t in range(n_eq)])
+    xsigx = np.vstack([(np.hstack([sigiXX[(r,t)] for t in range(n_eq)])) for r in range(n_eq)])
     varb = la.inv(xsigx)
     beta = np.dot(varb,xsigy)
     bSUR = sur_mat2dict(beta,bigK)
@@ -408,7 +408,7 @@ def sur_resids(bigy,bigX,beta):
     
     '''
     n_eq = len(bigy.keys())
-    bigE = np.hstack((bigy[r] - spdot(bigX[r],beta[r])) for r in range(n_eq))
+    bigE = np.hstack([(bigy[r] - spdot(bigX[r],beta[r])) for r in range(n_eq)])
     return(bigE) 
     
 def sur_predict(bigy,bigX,beta):
@@ -433,7 +433,7 @@ def sur_predict(bigy,bigX,beta):
     
     '''
     n_eq = len(bigy.keys())
-    bigYP = np.hstack(spdot(bigX[r],beta[r]) for r in range(n_eq))
+    bigYP = np.hstack([spdot(bigX[r],beta[r]) for r in range(n_eq)])
     return(bigYP) 
     
     
-- 
2.39.1

